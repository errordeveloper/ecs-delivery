#!/bin/bash -x

set -o errexit
set -o pipefail
set -o nounset

cluster=${TARGET_ECS_CLUSTER:-"default"}

service_is_missing() {
  aws ecs describe-services \
      --cluster ${cluster} \
      --services "${name}-service" \
    | jq -r '.failures[0].reason' \
    | grep -q MISSING
}

this_tag() {
 printf "%s:%s-%s" ${TRAVIS_REPO_SLUG} ${name} ${TRAVIS_COMMIT}
}

for this in $(ls app-services/*.json) ; do
  name=$(basename ${this} .json)

  if [ -f app-code/${name}/Dockerfile ] ; then
    containers=$(jq -c ".containers | [(.[] | if .image == \"\$this\" then .image = \"$(this_tag)\" else . end)]" ${this})
  else
    containers=$(jq -c ".containers" ${this})
  fi

  aws ecs register-task-definition \
      --family "${name}-task" \
      --container-definitions "${containers}" \
    | jq .

  if service_is_missing ; then
    aws ecs create-service \
        --cluster ${cluster} \
        --service-name "${name}-service" \
        --task-definition "${name}-task" \
        --cli-input-json "$(jq -c '.service' ${this})" \
      | jq .
  else
    aws ecs update-service \
        --cluster ${cluster} \
        --service "${name}-service" \
        --task-definition "${name}-task" \
        --deployment-configuration '{ "minimumHealthyPercent":25, "maximumPercent":100 }' \
        --cli-input-json "$(jq -c '.service' ${this})" \
      | jq .
  fi
done
